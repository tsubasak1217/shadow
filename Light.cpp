#include "Light.h"

//=========================================================初期化関数==============================================================
void Light::Init(int sceneNum) {
	switch (sceneNum) {
		//====================================================================================
	case TITLE://							   タイトル画面
		//====================================================================================
		break;
		//====================================================================================
	case SELECT://							   ステージ選択
		//====================================================================================
		break;
		//====================================================================================
	case GAME://								ゲーム本編
		//====================================================================================
		break;
		//====================================================================================
	case CLEAR://								クリア画面
		//====================================================================================
		break;

	default:
		break;
	}
	
}

//====================================================アップデート=============================================================
void Light::Update(char* keys, Map map, float rangeTheta) {

	switch (Scene::sceneNum_) {
		//====================================================================================
	case TITLE://							   タイトル画面
		//====================================================================================
		break;
		//====================================================================================
	case SELECT://							   ステージ選択
		//====================================================================================
		break;
		//====================================================================================
	case GAME://								ゲーム本編
		//====================================================================================

		lightHitSpot_.clear();

		aimPos_ = { emitPos_.x,emitPos_.y - Global::windowSize_.y };

		leftVec_ = Multiply(
			aimPos_.operator-(emitPos_),
			AffineMatrix({ 1.0f,1.0f }, -(rangeTheta * 0.5f), emitPos_)
		);

		rightVec_ = Multiply(
			aimPos_.operator-(emitPos_),
			AffineMatrix({ 1.0f,1.0f }, rangeTheta * 0.5f, emitPos_)
		);

		leftVec_ = CrossPos(emitPos_, leftVec_, { 0,0 }, { float(Global::windowSize_.x),0 });
		rightVec_ = CrossPos(emitPos_, rightVec_, { 0,0 }, { float(Global::windowSize_.x),0 });



		if (keys[DIK_Q]) {
			emitPos_.x -= 2.0f;
		}

		if (keys[DIK_E]) {
			emitPos_.x += 2.0f;
		}

		break;


		//====================================================================================
	case CLEAR://								クリア画面
		//====================================================================================
		break;

	default:
		break;
	}

};


//====================================================描画=============================================================
void Light::Draw(Map map,ChangeScene CS) {

	switch (Scene::sceneNum_) {
		//====================================================================================
	case TITLE://							   タイトル画面
		//====================================================================================
		break;
		//====================================================================================
	case SELECT://							   ステージ選択
		//====================================================================================
		break;
		//====================================================================================
	case GAME://								ゲーム本編
		//====================================================================================
		if (!CS.isEndChange_) {//ゴールにたどり着いたとき、光を消す
			Novice::DrawTriangle(
				int(emitPos_.x),
				int(emitPos_.y),
				int(leftVec_.x),
				int(leftVec_.y),
				int(rightVec_.x),
				int(rightVec_.y),
				0xffffff22,
				kFillModeSolid
			);
		}
		Novice::DrawEllipse(
			int(emitPos_.x),
			int(emitPos_.y),
			32, 32, 0.0f,
			0xffffffff,
			kFillModeSolid
		);

		break;


		//====================================================================================
	case CLEAR://								クリア画面
		//====================================================================================
		break;

	default:
		break;
	}

};