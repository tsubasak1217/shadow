#include "Player.h"

//====================================================初期化関数=============================================================
void Player::Init(int sceneNum) {

	switch (sceneNum) {
		//====================================================================================
	case TITLE://							   タイトル画面
		//====================================================================================
		break;
		//====================================================================================
	case SELECT://							   ステージ選択
		//====================================================================================
		break;
		//====================================================================================
	case GAME://								ゲーム本編
		//====================================================================================
		break;
		//====================================================================================
	case CLEAR://								クリア画面
		//====================================================================================
		break;

	default:
		break;
	}
}

//====================================================アップデート=============================================================
void Player::Update(char* keys, Scene scene) {

	switch (scene.GetSceneNum()) {
		//====================================================================================
	case TITLE://							   タイトル画面
		//====================================================================================
		break;
		//====================================================================================
	case SELECT://							   ステージ選択
		//====================================================================================
		break;
		//====================================================================================
	case GAME://								ゲーム本編
		//====================================================================================
		
		velocity_ = { 0.0f,0.0f };

		direction_.x = float(keys[DIK_RIGHT] - keys[DIK_LEFT]);
		direction_.y = float(keys[DIK_DOWN] - keys[DIK_UP]);

		velocity_ = Normalize({ 0.0f,0.0f }, direction_);

		velocity_.x *= speed_;
		velocity_.y *= speed_;

		pos_.x += velocity_.x;
		pos_.y += velocity_.y;
		
		break;
		//====================================================================================
	case CLEAR://								クリア画面
		//====================================================================================
		break;

	default:
		break;
	}
}


//====================================================描画=============================================================
void Player::Draw(Resources rs, Scene scene, Map map) {

	//シーンに応じて処理を分ける
	switch (scene.GetSceneNum()) {
		//====================================================================================
	case TITLE://							   タイトル画面
		//====================================================================================
		break;
		//====================================================================================
	case SELECT://							   ステージ選択
		//====================================================================================
		break;
		//====================================================================================
	case GAME://								ゲーム本編
		//====================================================================================

		Novice::DrawQuad(
			int(map.GetPuzzleLeftTop().x + pos_.x - size_.x * 0.5f),
			int(map.GetPuzzleLeftTop().y + pos_.y + size_.y * 0.5f),
			int(map.GetPuzzleLeftTop().x + pos_.x + size_.x * 0.5f),
			int(map.GetPuzzleLeftTop().y + pos_.y + size_.y * 0.5f),
			int(map.GetPuzzleLeftTop().x + pos_.x - size_.x * 0.5f),
			int(map.GetPuzzleLeftTop().y + pos_.y - size_.y * 0.5f),
			int(map.GetPuzzleLeftTop().x + pos_.x + size_.x * 0.5f),
			int(map.GetPuzzleLeftTop().y + pos_.y - size_.y * 0.5f),
			0, 0,
			1, 1,
			rs.whiteGH,
			0xff0000ff
		);

		//====================================================================================
	case CLEAR://								クリア画面
		//====================================================================================
		break;

	default:
		break;
	}
	
}